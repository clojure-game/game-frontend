{"version":3,"sources":["uix/compiler/alpha.cljs"],"mappings":";;;;;AAMA,8CAAA,9CAAOA,oGAAwBC;AAA/B,AAEO,sBAAA,WAAAE,1BAACC;AAAD,AAAO,GAAM,kCAAAD,iBAAA,nDAACE;AAAP,AACE,QAAYJ,mBAAe,8DAAAE,9DAACG,+CAASL;;AADvC;;GADP,AAAOC,YAAUD;;AAIxB,wCAAA,xCAAMM,wFAAwBN;AAA9B,AACE,oBAAM,iBAAAO,oBAAK,AAACC,cAAI,AAAkBR;AAA5B,AAAA,GAAAO;AACK,OAACR,4CAAmBC;;AADzBO;;;AAAN,AAEE,IAAME,iBAAS,iBAAAC,mBAAI,AAAeV;AAAnB,AAAA,oBAAAU;AAAAA;;AACI,OAAQV;;;AAD3B,AAEE,MAAO,KAAAW,MAAW,CAAA,gGAAA,kBAAA,uDAAA,+IAAA,xOAAyCF,wNAE+CA;;AAN9G;;AADF;;AAUA,2CAAA,3CAAOG,8FAAuBZ,eAAmBa,eAAeC;AAAhE,AACE,IAAMC,QAAM,gBAAA,fAAMF;IACZG,WAAS,iBAAAC,qBAAc,AAAA,kFAAMF;AAApB,AAAA,GAAA,CAAAE,sBAAA;AAAA,iBAEaF;;AAFb,UAAAE,NAAUC;AAAV,AAAA,gBACYA,aAAU,qDAAA,rDAACC,+CAAOJ;;;IAEvCK,OAAK,2EAAA,gDAAA,zHAAI,6CAAA,7CAACC,iDAAI,AAAUR,yBACZb,eAAegB,SAAS,gBAAA,fAAMH,uBAC9Bb,eAAegB;AANjC,AAOE,2DAAA,pDAAQM,yDAAwB,AAASF,YAAKN;;AAElD,6CAAA,7CAAOS,kGAAyBvB,eAAmBa,eAAeC;AAAlE,AACE,IAAME,oDAAa,gBAAA,fAAMH,zCACN,8DAAA,GAAA,jEAACW,DACD,wEAAA;IACbJ,OAAK,2EAAA,gDAAA,zHAAI,6CAAA,7CAACC,iDAAI,AAAUR,yBACZb,eAAegB,SAAS,gBAAA,fAAMH,uBAC9Bb,eAAegB;AALjC,AAME,2DAAA,pDAAQM,yDAAwB,AAASF,YAAKN;;AAElD,uCAAA,vCAAMW,sFAAwBzB,eAAea,eAAeC;AAA5D,AACE,GAAeY;AAAf,AACE,AAACpB,sCAAmBN;;AADtB;;AAEA,oBAAI,AAAkBA;AACpB,OAACY,yCAAsBZ,eAAea,eAAeC;;AACrD,OAACS,2CAAwBvB,eAAea,eAAeC","names":["uix.compiler.alpha/reagent-component?","component-type","js/Object","p1__38466#","cljs.core/some","clojure.string/starts-with?","uix.compiler.alpha.goog$module$goog$object.get","uix.compiler.alpha/validate-component","and__5043__auto__","cljs.core/not","name-str","or__5045__auto__","js/Error","uix.compiler.alpha/uix-component-element","props-children","children","props","js-props","temp__5806__auto__","key","cljs.core.dissoc","args","cljs.core._EQ_","js/module$node_modules$react$index.createElement","uix.compiler.alpha/react-component-element","uix.compiler.attributes/interpret-attrs","uix.compiler.alpha/component-element","js/goog.DEBUG"],"sourcesContent":["(ns uix.compiler.alpha\n  (:require [react]\n            [goog.object :as gobj]\n            [uix.compiler.attributes :as attrs]\n            [clojure.string :as str]))\n\n(defn- reagent-component? [^js component-type]\n  (->> (.keys js/Object component-type)\n       (some #(when (str/starts-with? % \"G_\")\n                (identical? component-type (gobj/get component-type %))))))\n\n(defn validate-component [^js component-type]\n  (when (and (not (.-uix-component? component-type))\n             (reagent-component? component-type))\n    (let [name-str (or (.-displayName component-type)\n                       (.-name component-type))]\n      (throw (js/Error. (str \"Invalid use of Reagent component \" name-str \" in `$` form.\\n\"\n                             \"UIx doesn't know how to render Reagent components.\\n\"\n                             \"Reagent element should be Hiccup wrapped with r/as-element, i.e. (r/as-element [\" name-str \"])\")))))\n  true)\n\n(defn- uix-component-element [component-type ^js props-children children]\n  (let [props (aget props-children 0)\n        js-props (if-some [key (:key props)]\n                   #js {:key key :argv (dissoc props :key)}\n                   #js {:argv props})\n        args (if (= 2 (.-length props-children))\n               #js [component-type js-props (aget props-children 1)]\n               #js [component-type js-props])]\n    (.apply react/createElement nil (.concat args children))))\n\n(defn- react-component-element [component-type ^js props-children children]\n  (let [js-props (-> (aget props-children 0)\n                     (attrs/interpret-attrs #js [] true)\n                     (aget 0))\n        args (if (= 2 (.-length props-children))\n               #js [component-type js-props (aget props-children 1)]\n               #js [component-type js-props])]\n    (.apply react/createElement nil (.concat args children))))\n\n(defn component-element [^clj component-type props-children children]\n  (when ^boolean goog.DEBUG\n    (validate-component component-type))\n  (if (.-uix-component? component-type)\n    (uix-component-element component-type props-children children)\n    (react-component-element component-type props-children children)))\n"],"x_google_ignoreList":[0]}